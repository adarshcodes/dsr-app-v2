{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.normalizeLocalePath = normalizeLocalePath;\nfunction normalizeLocalePath(pathname, locales) {\n  let detectedLocale;\n  // first item will be empty string from splitting at first char\n  const pathnameParts = pathname.split('/');\n  (locales || []).some(locale => {\n    if (pathnameParts[1] && pathnameParts[1].toLowerCase() === locale.toLowerCase()) {\n      detectedLocale = locale;\n      pathnameParts.splice(1, 1);\n      pathname = pathnameParts.join('/') || '/';\n      return true;\n    }\n    return false;\n  });\n  return {\n    pathname,\n    detectedLocale\n  };\n}","map":{"version":3,"names":["normalizeLocalePath","pathname","locales","detectedLocale","pathnameParts","split","some","locale","toLowerCase","splice","join"],"sources":["../../../../src/shared/lib/i18n/normalize-locale-path.ts"],"sourcesContent":[null],"mappings":"AAAA;;;;;QAcgBA,mBAAmB,GAAnBA,mBAAmB;AAA5B,SAASA,mBAAmBA,CACjCC,QAAgB,EAChBC,OAAkB,EACN;EACZ,IAAIC,cAAc;EAClB;EACA,MAAMC,aAAa,GAAGH,QAAQ,CAACI,KAAK,CAAC,GAAG,CAAC;EAExC,CAACH,OAAO,IAAI,EAAE,EAAEI,IAAI,CAAEC,MAAM,IAAK;IAChC,IACEH,aAAa,CAAC,CAAC,CAAC,IAChBA,aAAa,CAAC,CAAC,CAAC,CAACI,WAAW,EAAE,KAAKD,MAAM,CAACC,WAAW,EAAE,EACvD;MACAL,cAAc,GAAGI,MAAM;MACvBH,aAAa,CAACK,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC;MAC1BR,QAAQ,GAAGG,aAAa,CAACM,IAAI,CAAC,GAAG,CAAC,IAAI,GAAG;MACzC,OAAO,IAAI;;IAEb,OAAO,KAAK;GACb,CAAC;EAEF,OAAO;IACLT,QAAQ;IACRE;GACD"},"metadata":{},"sourceType":"script","externalDependencies":[]}