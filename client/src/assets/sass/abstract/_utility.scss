// Use this class for any form to auto-style
// There should be a form element(class: form), which contains a div with class input-row(this will take how many input shows in a row) which contains one input element(class: form__input form-input) and a lable(input__label input-label) to that --Adarsh--21-april-2023

.form {
  @include flex-column;
  gap: 2.5rem;

  .input-row {
    flex: 1;
    @include flex-row;
    gap: 3rem;
    flex-wrap: wrap;

    @media screen and (max-width: 500px) {
      flex-wrap: wrap;
      flex-direction: column;
    }

    .input__group-box {
      @include flex-row-spacebetween;
      position: relative;
      gap: 3rem;
      width: 48%;
      align-items: flex-start;

      @media screen and (max-width: 1200px) {
        width: 100%;
      }
    }

    .input__group {
      position: relative;
      @include flex-column;
      flex-direction: column-reverse;
      gap: 1rem;
      flex: auto;

      textarea {
        resize: none;

        // @include customScroll;
        &::-webkit-scrollbar {
          width: 0.3rem;
        }

        &::-webkit-scrollbar-track {
          background-color: var(--border-color);
          border-radius: 0.1rem;
        }

        &::-webkit-scrollbar-thumb {
          background-color: var(--primary-text);
          border-radius: 0.1rem;
        }
      }
    }

    .input__label {
      font-size: 2rem;
      font-weight: 400;
      color: var(--primary-text);
      transition: all 0.3s $bez-1;
    }

    .form__input {
      font-weight: 400;
      flex: 1;
      background-color: var(--light-section);
      border: none;
      font-family: inherit;
      color: var(--secondary-text);
      border-bottom: 2px solid #018171;
      padding: 1.2rem 0rem 0.8rem 0;
      font-size: 1.8rem;
      transition: all 0.3s cubic-bezier(0.5, 0, 0.5, 1.5);

      @media screen and (max-width: 600px) {
        font-size: 1.8rem;
        font-weight: 500;
      }
    }

    textarea {
      padding: 0.15rem 0 !important;
    }

    .form__input:focus {
      outline: none;
    }

    .form__input:focus:invalid {
      border-bottom: 1px solid #fa7161;
    }

    .form__input::-webkit-input-placeholder {
      color: #232323;
    }

    .form__input::placeholder {
      color: #232323;
      text-transform: capitalize;
    }

    // .form-input:placeholder-shown+.input-label {
    //   opacity: 0;
    //   visibility: hidden;
    //   transform: translate(0rem, -4rem);
    // }
  }
}

.highlight {
  text-transform: capitalize;
  color: var(--swatch-3);
}

.circle-cta {
  width: 3.5rem;
  height: 3.5rem;
  border-radius: 50%;
  @include shadow-1;
  @include flex-row-center;
  transition: all 0.3s $bez-3;
  border: 1px solid var(--message-box-border);

  &:hover {
    background-color: var(--message-box-border);
  }

  @media screen and (max-width: 500px) {
    width: 3.2rem;
    height: 3.2rem;
  }
}

.btn-row {
  flex-direction: row !important;
  gap: 1.5rem !important;
}

input,
textarea {
  &::placeholder {
    color: var(--primary-text) !important;
  }
}

.ql-container {
  height: auto !important;

  &:focus {
    border-color: $color-success !important;
  }
}

.ql-editor {
  height: 15rem !important;
  @include customScroll;
  font-family: "League Spartan", sans-serif !important;
  font-size: 1.7rem;
}

.quill {

  &:focus-within .ql-container.ql-snow,
  &:focus-within .ql-toolbar.ql-snow {
    border-color: $color-success !important;
  }
}

.ql-toolbar.ql-snow {
  border-radius: 0.4rem 0.4rem 0 0;
}

.ql-container.ql-snow {
  border-radius: 0 0 0.4rem 0.4rem;
}

.ql-snow.ql-toolbar button,
.ql-snow .ql-toolbar button,
.ql-snow.ql-toolbar button,
.ql-snow .ql-toolbar button,
.ql-snow.ql-toolbar button.ql-active,
.ql-snow .ql-toolbar button.ql-active,
.ql-snow.ql-toolbar .ql-picker-label,
.ql-snow .ql-toolbar .ql-picker-label,
.ql-snow.ql-toolbar .ql-picker-label.ql-active,
.ql-snow .ql-toolbar .ql-picker-label.ql-active,
.ql-snow.ql-toolbar .ql-picker-item,
.ql-snow .ql-toolbar .ql-picker-item,
.ql-snow.ql-toolbar .ql-picker-item.ql-selected,
.ql-snow .ql-toolbar .ql-picker-item.ql-selected {
  color: var(--primary-text) !important;
  filter: contrast(0);
}